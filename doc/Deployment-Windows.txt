1  Installation for production

	1.1  Download and install Node.js from https://nodejs.org/en/download/
	
		 1.1.1  Unzip the file to D:/ and rename it to be node/
		 1.1.2  Copy install.bat to node/
		 1.1.3  Run the install.bat to create the Windows service and add an icon on the desktop
	
	1.2  Download and install CouchDB 2.2.0 from http://couchdb.apache.org/#download

		 1.2.1  Install CouchDB on a computer and zip the folders
		 1.2.2  Unzip the file to D:/ and rename it to be couchdb/
		 1.2.3  Copy install.bat to couchdb/
		 1.2.4  Run the install.bat to create the Windows service and add an icon on the desktop
		 1.2.5  Download the couchdb-backup.sh from https://github.com/danielebailo/couchdb-dump
		 
	1.3  Configure CouchDB
	
		 1.3.1  Start the server
		 		> D:/couchdb/bin/couchdb.cmd -couch_ini H:\COUCHDB\etc\default.ini H:\COUCHDB\etc\local.ini
		 		$ cd H:\COUCHDB
		 		$ bin\couchdb.cmd -a H:\COUCHDB\etc\local.ini
		 1.3.2  Change port to 8825 in H:\COUCHDB\etc\local.ini
		 		[chttpd]
				port = 8825
		 1.3.3  Change log path and interval				
				[stats]
				; Stats collection interval in seconds. Default 10 seconds.
				; interval = 10
				file = ./var/log/couchdb.log
		 1.3.4  Open http://localhost:8825/_utils for accessing Futon
		 1.3.5  Create Admins(Optoinal)
		 1.3.6	Create database: users
		 
	1.4  Use CouchDB		 
		 1.3.5  Start GitBash from C:\Program Files\Git\bin\GitBash
		 1.3.6  Add New Documents
		 		$ curl -X POST http://127.0.0.1:5984/test_db/ -d '{"name": "Ash Ketchum", "age": 10, "type": "trainer"}' -H "Content-Type: application/json"
		 1.3.6  Retrieve Documents to return the id, key and value of the document
		 		$ curl -X GET http://127.0.0.1:5984/test_db/_all_docs
		 1.3.7  Retrieve Documents to return the contents
		 		$ curl -X GET http://127.0.0.1:5984/test_db/_all_docs?include_docs=true
		 1.3.8  Retrieve a specific document
		 		$ curl -X GET http://127.0.0.1:5984/test_db/cc6b37f1e6b2215f2a5ccac38c000a43
		 1.3.9  Retrieve a specific revision
		 		$ curl -X GET http://127.0.0.1:5984/test/cc6b37f1e6b2215f2a5ccac38c000a43?rev=1-61280846062dcdb986c5a6c4aa9aaf03
		 1.3.10 Update Documents
				$ curl -X PUT http://127.0.0.1:5984/test_db/cc6b37f1e6b2215f2a5ccac38c000a43 -d '{"_rev": "1-61280846062dcdb986c5a6c4aa9aaf03", "name": "Ash Ketchum", "age": 12, "type": "trainer"}' -H "Content-Type: application/json"
		 1.3.11 Update Documents
				$ curl -X DELETE http://127.0.0.1:5984/test_db/cc6b37f1e6b2215f2a5ccac38c000a43?rev=2-0023f19d7d3097468a8eeec014018840
		 1.3.12 Query the view
				$ curl "http://127.0.0.1:5984/test_db/_design/pokemon/_view/by_type?key=%22water%22"
		 1.3.13 Backup and Restore
		 		$ bash couchdb-backup.sh -b -H 127.0.0.1 -d <database_name> -f <backup_file_name>.json -u <username? -p <password>
		 		$ bash couchdb-backup.sh -r -H 127.0.0.1 -d <database_name> -f <backup_file_name>.json -u <username? -p <password>

	1.5  Download and install npm packages
		 $ npm install
		 or
		 $ npm i basic-auth body-parser connect-ensure-login cookie-parser cors debug 
		   ejs ejs-locals errorhandler express express-session morgan nano npm passport 
		   passport-local path serve-favicon validator bcrypt

	1.6  Set up debugging mode
		 $ cd server
		 $ set DEBUG=http,db,why,why_util,apps,apps_util
		 $ nodemon index.js
		 
	1.7  Initialize database
		 $ cd server
		 $ node models/init.js
		 
	1.8  Run in production mode
		 $ NODE_ENV=production node server.js
		 
	1.9  Use NODE_PATH in package.json
		 {
		   "name": "node_path",
		   "version": "1.0.0",
		   "description": "",
		   "main": "index.js",
		   "scripts": {
		     "start": "NODE_PATH=lib node index.js"
  		 },
		 $ npm start
		 



	
